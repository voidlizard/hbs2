## 2023-07-12

PR: key-value-utilities
  branch: key-value-utilities
  commit: cb4ee37f455b8e001fd5688106b2da1b31885dc4
  Добавлены утилиты для работы с ключами и значениями.

## 2023-02-09

TODO: implement-regression-tests

  54377068aac95cbfd8c69177a101c434feecff41


## 2023-02-07

Для fixme нам нужны конфиги. Стандартые конфиги это, в основном, треш,
поэтому будем делать новые. Как всегда.

Конфиги будут sexp,  при этом, будут уметь притворяться не sexp.

поэтому:

```
atom term* eol
```

единичная инструкция.

эквивалентна

```
( atom term* )
```

выражение конфига:

```

(atom term* )

```

### term

```
term ::= string | number | atom | bool
```

Про bool это не точно.


### Пример конфига:

```
fixme-comments   // # ; --

; FIXME могут быть в блоках комментариев,
; а могут и нет.

fixme-prefix     FIXME:     bug issue

; комментарий.   ^^^^^      ^^^^^^^^^^^^^^^^^^^^^^
;                Префикс    Категории для префикса


```

Как биндить термы на целевой язык? В нашем случае Haskell.


FIXME: хорошо бы тут сразу поддержать wisp.
 Но что бы его поддержать, надо его понять.




